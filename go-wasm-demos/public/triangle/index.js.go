// +build js,wasm

package triangle

// IndexJS contains minimal code to spin up go main binary in a browser environment.
// It is base64-encoded should the script contain backticks.
const IndexJS = `
Ly8gQ29weXJpZ2h0IDIwMTggVGhlIEdvIEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCi8v
IFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGEgQlNELXN0eWxlCi8vIGxp
Y2Vuc2UgdGhhdCBjYW4gYmUgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZS4KCigoKSA9PiB7Cgkv
LyBNYXAgbXVsdGlwbGUgSmF2YVNjcmlwdCBlbnZpcm9ubWVudHMgdG8gYSBzaW5nbGUgY29tbW9u
IEFQSSwKCS8vIHByZWZlcnJpbmcgd2ViIHN0YW5kYXJkcyBvdmVyIE5vZGUuanMgQVBJLgoJLy8K
CS8vIEVudmlyb25tZW50cyBjb25zaWRlcmVkOgoJLy8gLSBCcm93c2VycwoJLy8gLSBOb2RlLmpz
CgkvLyAtIEVsZWN0cm9uCgkvLyAtIFBhcmNlbAoKCWlmICh0eXBlb2YgZ2xvYmFsICE9PSAidW5k
ZWZpbmVkIikgewoJCS8vIGdsb2JhbCBhbHJlYWR5IGV4aXN0cwoJfSBlbHNlIGlmICh0eXBlb2Yg
d2luZG93ICE9PSAidW5kZWZpbmVkIikgewoJCXdpbmRvdy5nbG9iYWwgPSB3aW5kb3c7Cgl9IGVs
c2UgaWYgKHR5cGVvZiBzZWxmICE9PSAidW5kZWZpbmVkIikgewoJCXNlbGYuZ2xvYmFsID0gc2Vs
ZjsKCX0gZWxzZSB7CgkJdGhyb3cgbmV3IEVycm9yKCJjYW5ub3QgZXhwb3J0IEdvIChuZWl0aGVy
IGdsb2JhbCwgd2luZG93IG5vciBzZWxmIGlzIGRlZmluZWQpIik7Cgl9CgoJaWYgKCFnbG9iYWwu
cmVxdWlyZSAmJiB0eXBlb2YgcmVxdWlyZSAhPT0gInVuZGVmaW5lZCIpIHsKCQlnbG9iYWwucmVx
dWlyZSA9IHJlcXVpcmU7Cgl9CgoJaWYgKCFnbG9iYWwuZnMgJiYgZ2xvYmFsLnJlcXVpcmUpIHsK
CQlnbG9iYWwuZnMgPSByZXF1aXJlKCJmcyIpOwoJfQoKCWlmICghZ2xvYmFsLmZzKSB7CgkJbGV0
IG91dHB1dEJ1ZiA9ICIiOwoJCWdsb2JhbC5mcyA9IHsKCQkJY29uc3RhbnRzOiB7IE9fV1JPTkxZ
OiAtMSwgT19SRFdSOiAtMSwgT19DUkVBVDogLTEsIE9fVFJVTkM6IC0xLCBPX0FQUEVORDogLTEs
IE9fRVhDTDogLTEgfSwgLy8gdW51c2VkCgkJCXdyaXRlU3luYyhmZCwgYnVmKSB7CgkJCQlvdXRw
dXRCdWYgKz0gZGVjb2Rlci5kZWNvZGUoYnVmKTsKCQkJCWNvbnN0IG5sID0gb3V0cHV0QnVmLmxh
c3RJbmRleE9mKCJcbiIpOwoJCQkJaWYgKG5sICE9IC0xKSB7CgkJCQkJY29uc29sZS5sb2cob3V0
cHV0QnVmLnN1YnN0cigwLCBubCkpOwoJCQkJCW91dHB1dEJ1ZiA9IG91dHB1dEJ1Zi5zdWJzdHIo
bmwgKyAxKTsKCQkJCX0KCQkJCXJldHVybiBidWYubGVuZ3RoOwoJCQl9LAoJCQl3cml0ZShmZCwg
YnVmLCBvZmZzZXQsIGxlbmd0aCwgcG9zaXRpb24sIGNhbGxiYWNrKSB7CgkJCQlpZiAob2Zmc2V0
ICE9PSAwIHx8IGxlbmd0aCAhPT0gYnVmLmxlbmd0aCB8fCBwb3NpdGlvbiAhPT0gbnVsbCkgewoJ
CQkJCXRocm93IG5ldyBFcnJvcigibm90IGltcGxlbWVudGVkIik7CgkJCQl9CgkJCQljb25zdCBu
ID0gdGhpcy53cml0ZVN5bmMoZmQsIGJ1Zik7CgkJCQljYWxsYmFjayhudWxsLCBuKTsKCQkJfSwK
CQkJb3BlbihwYXRoLCBmbGFncywgbW9kZSwgY2FsbGJhY2spIHsKCQkJCWNvbnN0IGVyciA9IG5l
dyBFcnJvcigibm90IGltcGxlbWVudGVkIik7CgkJCQllcnIuY29kZSA9ICJFTk9TWVMiOwoJCQkJ
Y2FsbGJhY2soZXJyKTsKCQkJfSwKCQkJcmVhZChmZCwgYnVmZmVyLCBvZmZzZXQsIGxlbmd0aCwg
cG9zaXRpb24sIGNhbGxiYWNrKSB7CgkJCQljb25zdCBlcnIgPSBuZXcgRXJyb3IoIm5vdCBpbXBs
ZW1lbnRlZCIpOwoJCQkJZXJyLmNvZGUgPSAiRU5PU1lTIjsKCQkJCWNhbGxiYWNrKGVycik7CgkJ
CX0sCgkJCWZzeW5jKGZkLCBjYWxsYmFjaykgewoJCQkJY2FsbGJhY2sobnVsbCk7CgkJCX0sCgkJ
fTsKCX0KCglpZiAoIWdsb2JhbC5jcnlwdG8pIHsKCQljb25zdCBub2RlQ3J5cHRvID0gcmVxdWly
ZSgiY3J5cHRvIik7CgkJZ2xvYmFsLmNyeXB0byA9IHsKCQkJZ2V0UmFuZG9tVmFsdWVzKGIpIHsK
CQkJCW5vZGVDcnlwdG8ucmFuZG9tRmlsbFN5bmMoYik7CgkJCX0sCgkJfTsKCX0KCglpZiAoIWds
b2JhbC5wZXJmb3JtYW5jZSkgewoJCWdsb2JhbC5wZXJmb3JtYW5jZSA9IHsKCQkJbm93KCkgewoJ
CQkJY29uc3QgW3NlYywgbnNlY10gPSBwcm9jZXNzLmhydGltZSgpOwoJCQkJcmV0dXJuIHNlYyAq
IDEwMDAgKyBuc2VjIC8gMTAwMDAwMDsKCQkJfSwKCQl9OwoJfQoKCWlmICghZ2xvYmFsLlRleHRF
bmNvZGVyKSB7CgkJZ2xvYmFsLlRleHRFbmNvZGVyID0gcmVxdWlyZSgidXRpbCIpLlRleHRFbmNv
ZGVyOwoJfQoKCWlmICghZ2xvYmFsLlRleHREZWNvZGVyKSB7CgkJZ2xvYmFsLlRleHREZWNvZGVy
ID0gcmVxdWlyZSgidXRpbCIpLlRleHREZWNvZGVyOwoJfQoKCS8vIEVuZCBvZiBwb2x5ZmlsbHMg
Zm9yIGNvbW1vbiBBUEkuCgoJY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigidXRmLTgi
KTsKCWNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoInV0Zi04Iik7CgoJZ2xvYmFsLkdv
ID0gY2xhc3MgewoJCWNvbnN0cnVjdG9yKCkgewoJCQl0aGlzLmFyZ3YgPSBbImpzIl07CgkJCXRo
aXMuZW52ID0ge307CgkJCXRoaXMuZXhpdCA9IChjb2RlKSA9PiB7CgkJCQlpZiAoY29kZSAhPT0g
MCkgewoJCQkJCWNvbnNvbGUud2FybigiZXhpdCBjb2RlOiIsIGNvZGUpOwoJCQkJfQoJCQl9OwoJ
CQl0aGlzLl9leGl0UHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CgkJCQl0aGlz
Ll9yZXNvbHZlRXhpdFByb21pc2UgPSByZXNvbHZlOwoJCQl9KTsKCQkJdGhpcy5fcGVuZGluZ0V2
ZW50ID0gbnVsbDsKCQkJdGhpcy5fc2NoZWR1bGVkVGltZW91dHMgPSBuZXcgTWFwKCk7CgkJCXRo
aXMuX25leHRDYWxsYmFja1RpbWVvdXRJRCA9IDE7CgoJCQljb25zdCBtZW0gPSAoKSA9PiB7CgkJ
CQkvLyBUaGUgYnVmZmVyIG1heSBjaGFuZ2Ugd2hlbiByZXF1ZXN0aW5nIG1vcmUgbWVtb3J5LgoJ
CQkJcmV0dXJuIG5ldyBEYXRhVmlldyh0aGlzLl9pbnN0LmV4cG9ydHMubWVtLmJ1ZmZlcik7CgkJ
CX0KCgkJCWNvbnN0IHNldEludDY0ID0gKGFkZHIsIHYpID0+IHsKCQkJCW1lbSgpLnNldFVpbnQz
MihhZGRyICsgMCwgdiwgdHJ1ZSk7CgkJCQltZW0oKS5zZXRVaW50MzIoYWRkciArIDQsIE1hdGgu
Zmxvb3IodiAvIDQyOTQ5NjcyOTYpLCB0cnVlKTsKCQkJfQoKCQkJY29uc3QgZ2V0SW50NjQgPSAo
YWRkcikgPT4gewoJCQkJY29uc3QgbG93ID0gbWVtKCkuZ2V0VWludDMyKGFkZHIgKyAwLCB0cnVl
KTsKCQkJCWNvbnN0IGhpZ2ggPSBtZW0oKS5nZXRJbnQzMihhZGRyICsgNCwgdHJ1ZSk7CgkJCQly
ZXR1cm4gbG93ICsgaGlnaCAqIDQyOTQ5NjcyOTY7CgkJCX0KCgkJCWNvbnN0IGxvYWRWYWx1ZSA9
IChhZGRyKSA9PiB7CgkJCQljb25zdCBmID0gbWVtKCkuZ2V0RmxvYXQ2NChhZGRyLCB0cnVlKTsK
CQkJCWlmIChmID09PSAwKSB7CgkJCQkJcmV0dXJuIHVuZGVmaW5lZDsKCQkJCX0KCQkJCWlmICgh
aXNOYU4oZikpIHsKCQkJCQlyZXR1cm4gZjsKCQkJCX0KCgkJCQljb25zdCBpZCA9IG1lbSgpLmdl
dFVpbnQzMihhZGRyLCB0cnVlKTsKCQkJCXJldHVybiB0aGlzLl92YWx1ZXNbaWRdOwoJCQl9CgoJ
CQljb25zdCBzdG9yZVZhbHVlID0gKGFkZHIsIHYpID0+IHsKCQkJCWNvbnN0IG5hbkhlYWQgPSAw
eDdGRjgwMDAwOwoKCQkJCWlmICh0eXBlb2YgdiA9PT0gIm51bWJlciIpIHsKCQkJCQlpZiAoaXNO
YU4odikpIHsKCQkJCQkJbWVtKCkuc2V0VWludDMyKGFkZHIgKyA0LCBuYW5IZWFkLCB0cnVlKTsK
CQkJCQkJbWVtKCkuc2V0VWludDMyKGFkZHIsIDAsIHRydWUpOwoJCQkJCQlyZXR1cm47CgkJCQkJ
fQoJCQkJCWlmICh2ID09PSAwKSB7CgkJCQkJCW1lbSgpLnNldFVpbnQzMihhZGRyICsgNCwgbmFu
SGVhZCwgdHJ1ZSk7CgkJCQkJCW1lbSgpLnNldFVpbnQzMihhZGRyLCAxLCB0cnVlKTsKCQkJCQkJ
cmV0dXJuOwoJCQkJCX0KCQkJCQltZW0oKS5zZXRGbG9hdDY0KGFkZHIsIHYsIHRydWUpOwoJCQkJ
CXJldHVybjsKCQkJCX0KCgkJCQlzd2l0Y2ggKHYpIHsKCQkJCQljYXNlIHVuZGVmaW5lZDoKCQkJ
CQkJbWVtKCkuc2V0RmxvYXQ2NChhZGRyLCAwLCB0cnVlKTsKCQkJCQkJcmV0dXJuOwoJCQkJCWNh
c2UgbnVsbDoKCQkJCQkJbWVtKCkuc2V0VWludDMyKGFkZHIgKyA0LCBuYW5IZWFkLCB0cnVlKTsK
CQkJCQkJbWVtKCkuc2V0VWludDMyKGFkZHIsIDIsIHRydWUpOwoJCQkJCQlyZXR1cm47CgkJCQkJ
Y2FzZSB0cnVlOgoJCQkJCQltZW0oKS5zZXRVaW50MzIoYWRkciArIDQsIG5hbkhlYWQsIHRydWUp
OwoJCQkJCQltZW0oKS5zZXRVaW50MzIoYWRkciwgMywgdHJ1ZSk7CgkJCQkJCXJldHVybjsKCQkJ
CQljYXNlIGZhbHNlOgoJCQkJCQltZW0oKS5zZXRVaW50MzIoYWRkciArIDQsIG5hbkhlYWQsIHRy
dWUpOwoJCQkJCQltZW0oKS5zZXRVaW50MzIoYWRkciwgNCwgdHJ1ZSk7CgkJCQkJCXJldHVybjsK
CQkJCX0KCgkJCQlsZXQgcmVmID0gdGhpcy5fcmVmcy5nZXQodik7CgkJCQlpZiAocmVmID09PSB1
bmRlZmluZWQpIHsKCQkJCQlyZWYgPSB0aGlzLl92YWx1ZXMubGVuZ3RoOwoJCQkJCXRoaXMuX3Zh
bHVlcy5wdXNoKHYpOwoJCQkJCXRoaXMuX3JlZnMuc2V0KHYsIHJlZik7CgkJCQl9CgkJCQlsZXQg
dHlwZUZsYWcgPSAwOwoJCQkJc3dpdGNoICh0eXBlb2YgdikgewoJCQkJCWNhc2UgInN0cmluZyI6
CgkJCQkJCXR5cGVGbGFnID0gMTsKCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAic3ltYm9sIjoKCQkJ
CQkJdHlwZUZsYWcgPSAyOwoJCQkJCQlicmVhazsKCQkJCQljYXNlICJmdW5jdGlvbiI6CgkJCQkJ
CXR5cGVGbGFnID0gMzsKCQkJCQkJYnJlYWs7CgkJCQl9CgkJCQltZW0oKS5zZXRVaW50MzIoYWRk
ciArIDQsIG5hbkhlYWQgfCB0eXBlRmxhZywgdHJ1ZSk7CgkJCQltZW0oKS5zZXRVaW50MzIoYWRk
ciwgcmVmLCB0cnVlKTsKCQkJfQoKCQkJY29uc3QgbG9hZFNsaWNlID0gKGFkZHIpID0+IHsKCQkJ
CWNvbnN0IGFycmF5ID0gZ2V0SW50NjQoYWRkciArIDApOwoJCQkJY29uc3QgbGVuID0gZ2V0SW50
NjQoYWRkciArIDgpOwoJCQkJcmV0dXJuIG5ldyBVaW50OEFycmF5KHRoaXMuX2luc3QuZXhwb3J0
cy5tZW0uYnVmZmVyLCBhcnJheSwgbGVuKTsKCQkJfQoKCQkJY29uc3QgbG9hZFNsaWNlT2ZWYWx1
ZXMgPSAoYWRkcikgPT4gewoJCQkJY29uc3QgYXJyYXkgPSBnZXRJbnQ2NChhZGRyICsgMCk7CgkJ
CQljb25zdCBsZW4gPSBnZXRJbnQ2NChhZGRyICsgOCk7CgkJCQljb25zdCBhID0gbmV3IEFycmF5
KGxlbik7CgkJCQlmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7CgkJCQkJYVtpXSA9IGxv
YWRWYWx1ZShhcnJheSArIGkgKiA4KTsKCQkJCX0KCQkJCXJldHVybiBhOwoJCQl9CgoJCQljb25z
dCBsb2FkU3RyaW5nID0gKGFkZHIpID0+IHsKCQkJCWNvbnN0IHNhZGRyID0gZ2V0SW50NjQoYWRk
ciArIDApOwoJCQkJY29uc3QgbGVuID0gZ2V0SW50NjQoYWRkciArIDgpOwoJCQkJcmV0dXJuIGRl
Y29kZXIuZGVjb2RlKG5ldyBEYXRhVmlldyh0aGlzLl9pbnN0LmV4cG9ydHMubWVtLmJ1ZmZlciwg
c2FkZHIsIGxlbikpOwoJCQl9CgoJCQljb25zdCB0aW1lT3JpZ2luID0gRGF0ZS5ub3coKSAtIHBl
cmZvcm1hbmNlLm5vdygpOwoJCQl0aGlzLmltcG9ydE9iamVjdCA9IHsKCQkJCWdvOiB7CgkJCQkJ
Ly8gR28ncyBTUCBkb2VzIG5vdCBjaGFuZ2UgYXMgbG9uZyBhcyBubyBHbyBjb2RlIGlzIHJ1bm5p
bmcuIFNvbWUgb3BlcmF0aW9ucyAoZS5nLiBjYWxscywgZ2V0dGVycyBhbmQgc2V0dGVycykKCQkJ
CQkvLyBtYXkgc3luY2hyb25vdXNseSB0cmlnZ2VyIGEgR28gZXZlbnQgaGFuZGxlci4gVGhpcyBt
YWtlcyBHbyBjb2RlIGdldCBleGVjdXRlZCBpbiB0aGUgbWlkZGxlIG9mIHRoZSBpbXBvcnRlZAoJ
CQkJCS8vIGZ1bmN0aW9uLiBBIGdvcm91dGluZSBjYW4gc3dpdGNoIHRvIGEgbmV3IHN0YWNrIGlm
IHRoZSBjdXJyZW50IHN0YWNrIGlzIHRvbyBzbWFsbCAoc2VlIG1vcmVzdGFjayBmdW5jdGlvbiku
CgkJCQkJLy8gVGhpcyBjaGFuZ2VzIHRoZSBTUCwgdGh1cyB3ZSBoYXZlIHRvIHVwZGF0ZSB0aGUg
U1AgdXNlZCBieSB0aGUgaW1wb3J0ZWQgZnVuY3Rpb24uCgoJCQkJCS8vIGZ1bmMgd2FzbUV4aXQo
Y29kZSBpbnQzMikKCQkJCQkicnVudGltZS53YXNtRXhpdCI6IChzcCkgPT4gewoJCQkJCQljb25z
dCBjb2RlID0gbWVtKCkuZ2V0SW50MzIoc3AgKyA4LCB0cnVlKTsKCQkJCQkJdGhpcy5leGl0ZWQg
PSB0cnVlOwoJCQkJCQlkZWxldGUgdGhpcy5faW5zdDsKCQkJCQkJZGVsZXRlIHRoaXMuX3ZhbHVl
czsKCQkJCQkJZGVsZXRlIHRoaXMuX3JlZnM7CgkJCQkJCXRoaXMuZXhpdChjb2RlKTsKCQkJCQl9
LAoKCQkJCQkvLyBmdW5jIHdhc21Xcml0ZShmZCB1aW50cHRyLCBwIHVuc2FmZS5Qb2ludGVyLCBu
IGludDMyKQoJCQkJCSJydW50aW1lLndhc21Xcml0ZSI6IChzcCkgPT4gewoJCQkJCQljb25zdCBm
ZCA9IGdldEludDY0KHNwICsgOCk7CgkJCQkJCWNvbnN0IHAgPSBnZXRJbnQ2NChzcCArIDE2KTsK
CQkJCQkJY29uc3QgbiA9IG1lbSgpLmdldEludDMyKHNwICsgMjQsIHRydWUpOwoJCQkJCQlmcy53
cml0ZVN5bmMoZmQsIG5ldyBVaW50OEFycmF5KHRoaXMuX2luc3QuZXhwb3J0cy5tZW0uYnVmZmVy
LCBwLCBuKSk7CgkJCQkJfSwKCgkJCQkJLy8gZnVuYyBuYW5vdGltZSgpIGludDY0CgkJCQkJInJ1
bnRpbWUubmFub3RpbWUiOiAoc3ApID0+IHsKCQkJCQkJc2V0SW50NjQoc3AgKyA4LCAodGltZU9y
aWdpbiArIHBlcmZvcm1hbmNlLm5vdygpKSAqIDEwMDAwMDApOwoJCQkJCX0sCgoJCQkJCS8vIGZ1
bmMgd2FsbHRpbWUoKSAoc2VjIGludDY0LCBuc2VjIGludDMyKQoJCQkJCSJydW50aW1lLndhbGx0
aW1lIjogKHNwKSA9PiB7CgkJCQkJCWNvbnN0IG1zZWMgPSAobmV3IERhdGUpLmdldFRpbWUoKTsK
CQkJCQkJc2V0SW50NjQoc3AgKyA4LCBtc2VjIC8gMTAwMCk7CgkJCQkJCW1lbSgpLnNldEludDMy
KHNwICsgMTYsIChtc2VjICUgMTAwMCkgKiAxMDAwMDAwLCB0cnVlKTsKCQkJCQl9LAoKCQkJCQkv
LyBmdW5jIHNjaGVkdWxlVGltZW91dEV2ZW50KGRlbGF5IGludDY0KSBpbnQzMgoJCQkJCSJydW50
aW1lLnNjaGVkdWxlVGltZW91dEV2ZW50IjogKHNwKSA9PiB7CgkJCQkJCWNvbnN0IGlkID0gdGhp
cy5fbmV4dENhbGxiYWNrVGltZW91dElEOwoJCQkJCQl0aGlzLl9uZXh0Q2FsbGJhY2tUaW1lb3V0
SUQrKzsKCQkJCQkJdGhpcy5fc2NoZWR1bGVkVGltZW91dHMuc2V0KGlkLCBzZXRUaW1lb3V0KAoJ
CQkJCQkJKCkgPT4gewoJCQkJCQkJCXRoaXMuX3Jlc3VtZSgpOwoJCQkJCQkJCXdoaWxlICh0aGlz
Ll9zY2hlZHVsZWRUaW1lb3V0cy5oYXMoaWQpKSB7CgkJCQkJCQkJCS8vIGZvciBzb21lIHJlYXNv
biBHbyBmYWlsZWQgdG8gcmVnaXN0ZXIgdGhlIHRpbWVvdXQgZXZlbnQsIGxvZyBhbmQgdHJ5IGFn
YWluCgkJCQkJCQkJCS8vICh0ZW1wb3Jhcnkgd29ya2Fyb3VuZCBmb3IgaHR0cHM6Ly9naXRodWIu
Y29tL2dvbGFuZy9nby9pc3N1ZXMvMjg5NzUpCgkJCQkJCQkJCWNvbnNvbGUud2Fybigic2NoZWR1
bGVUaW1lb3V0RXZlbnQ6IG1pc3NlZCB0aW1lb3V0IGV2ZW50Iik7CgkJCQkJCQkJCXRoaXMuX3Jl
c3VtZSgpOwoJCQkJCQkJCX0KCQkJCQkJCX0sCgkJCQkJCQlnZXRJbnQ2NChzcCArIDgpICsgMSwg
Ly8gc2V0VGltZW91dCBoYXMgYmVlbiBzZWVuIHRvIGZpcmUgdXAgdG8gMSBtaWxsaXNlY29uZCBl
YXJseQoJCQkJCQkpKTsKCQkJCQkJbWVtKCkuc2V0SW50MzIoc3AgKyAxNiwgaWQsIHRydWUpOwoJ
CQkJCX0sCgoJCQkJCS8vIGZ1bmMgY2xlYXJUaW1lb3V0RXZlbnQoaWQgaW50MzIpCgkJCQkJInJ1
bnRpbWUuY2xlYXJUaW1lb3V0RXZlbnQiOiAoc3ApID0+IHsKCQkJCQkJY29uc3QgaWQgPSBtZW0o
KS5nZXRJbnQzMihzcCArIDgsIHRydWUpOwoJCQkJCQljbGVhclRpbWVvdXQodGhpcy5fc2NoZWR1
bGVkVGltZW91dHMuZ2V0KGlkKSk7CgkJCQkJCXRoaXMuX3NjaGVkdWxlZFRpbWVvdXRzLmRlbGV0
ZShpZCk7CgkJCQkJfSwKCgkJCQkJLy8gZnVuYyBnZXRSYW5kb21EYXRhKHIgW11ieXRlKQoJCQkJ
CSJydW50aW1lLmdldFJhbmRvbURhdGEiOiAoc3ApID0+IHsKCQkJCQkJY3J5cHRvLmdldFJhbmRv
bVZhbHVlcyhsb2FkU2xpY2Uoc3AgKyA4KSk7CgkJCQkJfSwKCgkJCQkJLy8gZnVuYyBzdHJpbmdW
YWwodmFsdWUgc3RyaW5nKSByZWYKCQkJCQkic3lzY2FsbC9qcy5zdHJpbmdWYWwiOiAoc3ApID0+
IHsKCQkJCQkJc3RvcmVWYWx1ZShzcCArIDI0LCBsb2FkU3RyaW5nKHNwICsgOCkpOwoJCQkJCX0s
CgoJCQkJCS8vIGZ1bmMgdmFsdWVHZXQodiByZWYsIHAgc3RyaW5nKSByZWYKCQkJCQkic3lzY2Fs
bC9qcy52YWx1ZUdldCI6IChzcCkgPT4gewoJCQkJCQljb25zdCByZXN1bHQgPSBSZWZsZWN0Lmdl
dChsb2FkVmFsdWUoc3AgKyA4KSwgbG9hZFN0cmluZyhzcCArIDE2KSk7CgkJCQkJCXNwID0gdGhp
cy5faW5zdC5leHBvcnRzLmdldHNwKCk7IC8vIHNlZSBjb21tZW50IGFib3ZlCgkJCQkJCXN0b3Jl
VmFsdWUoc3AgKyAzMiwgcmVzdWx0KTsKCQkJCQl9LAoKCQkJCQkvLyBmdW5jIHZhbHVlU2V0KHYg
cmVmLCBwIHN0cmluZywgeCByZWYpCgkJCQkJInN5c2NhbGwvanMudmFsdWVTZXQiOiAoc3ApID0+
IHsKCQkJCQkJUmVmbGVjdC5zZXQobG9hZFZhbHVlKHNwICsgOCksIGxvYWRTdHJpbmcoc3AgKyAx
NiksIGxvYWRWYWx1ZShzcCArIDMyKSk7CgkJCQkJfSwKCgkJCQkJLy8gZnVuYyB2YWx1ZUluZGV4
KHYgcmVmLCBpIGludCkgcmVmCgkJCQkJInN5c2NhbGwvanMudmFsdWVJbmRleCI6IChzcCkgPT4g
ewoJCQkJCQlzdG9yZVZhbHVlKHNwICsgMjQsIFJlZmxlY3QuZ2V0KGxvYWRWYWx1ZShzcCArIDgp
LCBnZXRJbnQ2NChzcCArIDE2KSkpOwoJCQkJCX0sCgoJCQkJCS8vIHZhbHVlU2V0SW5kZXgodiBy
ZWYsIGkgaW50LCB4IHJlZikKCQkJCQkic3lzY2FsbC9qcy52YWx1ZVNldEluZGV4IjogKHNwKSA9
PiB7CgkJCQkJCVJlZmxlY3Quc2V0KGxvYWRWYWx1ZShzcCArIDgpLCBnZXRJbnQ2NChzcCArIDE2
KSwgbG9hZFZhbHVlKHNwICsgMjQpKTsKCQkJCQl9LAoKCQkJCQkvLyBmdW5jIHZhbHVlQ2FsbCh2
IHJlZiwgbSBzdHJpbmcsIGFyZ3MgW11yZWYpIChyZWYsIGJvb2wpCgkJCQkJInN5c2NhbGwvanMu
dmFsdWVDYWxsIjogKHNwKSA9PiB7CgkJCQkJCXRyeSB7CgkJCQkJCQljb25zdCB2ID0gbG9hZFZh
bHVlKHNwICsgOCk7CgkJCQkJCQljb25zdCBtID0gUmVmbGVjdC5nZXQodiwgbG9hZFN0cmluZyhz
cCArIDE2KSk7CgkJCQkJCQljb25zdCBhcmdzID0gbG9hZFNsaWNlT2ZWYWx1ZXMoc3AgKyAzMik7
CgkJCQkJCQljb25zdCByZXN1bHQgPSBSZWZsZWN0LmFwcGx5KG0sIHYsIGFyZ3MpOwoJCQkJCQkJ
c3AgPSB0aGlzLl9pbnN0LmV4cG9ydHMuZ2V0c3AoKTsgLy8gc2VlIGNvbW1lbnQgYWJvdmUKCQkJ
CQkJCXN0b3JlVmFsdWUoc3AgKyA1NiwgcmVzdWx0KTsKCQkJCQkJCW1lbSgpLnNldFVpbnQ4KHNw
ICsgNjQsIDEpOwoJCQkJCQl9IGNhdGNoIChlcnIpIHsKCQkJCQkJCXN0b3JlVmFsdWUoc3AgKyA1
NiwgZXJyKTsKCQkJCQkJCW1lbSgpLnNldFVpbnQ4KHNwICsgNjQsIDApOwoJCQkJCQl9CgkJCQkJ
fSwKCgkJCQkJLy8gZnVuYyB2YWx1ZUludm9rZSh2IHJlZiwgYXJncyBbXXJlZikgKHJlZiwgYm9v
bCkKCQkJCQkic3lzY2FsbC9qcy52YWx1ZUludm9rZSI6IChzcCkgPT4gewoJCQkJCQl0cnkgewoJ
CQkJCQkJY29uc3QgdiA9IGxvYWRWYWx1ZShzcCArIDgpOwoJCQkJCQkJY29uc3QgYXJncyA9IGxv
YWRTbGljZU9mVmFsdWVzKHNwICsgMTYpOwoJCQkJCQkJY29uc3QgcmVzdWx0ID0gUmVmbGVjdC5h
cHBseSh2LCB1bmRlZmluZWQsIGFyZ3MpOwoJCQkJCQkJc3AgPSB0aGlzLl9pbnN0LmV4cG9ydHMu
Z2V0c3AoKTsgLy8gc2VlIGNvbW1lbnQgYWJvdmUKCQkJCQkJCXN0b3JlVmFsdWUoc3AgKyA0MCwg
cmVzdWx0KTsKCQkJCQkJCW1lbSgpLnNldFVpbnQ4KHNwICsgNDgsIDEpOwoJCQkJCQl9IGNhdGNo
IChlcnIpIHsKCQkJCQkJCXN0b3JlVmFsdWUoc3AgKyA0MCwgZXJyKTsKCQkJCQkJCW1lbSgpLnNl
dFVpbnQ4KHNwICsgNDgsIDApOwoJCQkJCQl9CgkJCQkJfSwKCgkJCQkJLy8gZnVuYyB2YWx1ZU5l
dyh2IHJlZiwgYXJncyBbXXJlZikgKHJlZiwgYm9vbCkKCQkJCQkic3lzY2FsbC9qcy52YWx1ZU5l
dyI6IChzcCkgPT4gewoJCQkJCQl0cnkgewoJCQkJCQkJY29uc3QgdiA9IGxvYWRWYWx1ZShzcCAr
IDgpOwoJCQkJCQkJY29uc3QgYXJncyA9IGxvYWRTbGljZU9mVmFsdWVzKHNwICsgMTYpOwoJCQkJ
CQkJY29uc3QgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QodiwgYXJncyk7CgkJCQkJCQlzcCA9
IHRoaXMuX2luc3QuZXhwb3J0cy5nZXRzcCgpOyAvLyBzZWUgY29tbWVudCBhYm92ZQoJCQkJCQkJ
c3RvcmVWYWx1ZShzcCArIDQwLCByZXN1bHQpOwoJCQkJCQkJbWVtKCkuc2V0VWludDgoc3AgKyA0
OCwgMSk7CgkJCQkJCX0gY2F0Y2ggKGVycikgewoJCQkJCQkJc3RvcmVWYWx1ZShzcCArIDQwLCBl
cnIpOwoJCQkJCQkJbWVtKCkuc2V0VWludDgoc3AgKyA0OCwgMCk7CgkJCQkJCX0KCQkJCQl9LAoK
CQkJCQkvLyBmdW5jIHZhbHVlTGVuZ3RoKHYgcmVmKSBpbnQKCQkJCQkic3lzY2FsbC9qcy52YWx1
ZUxlbmd0aCI6IChzcCkgPT4gewoJCQkJCQlzZXRJbnQ2NChzcCArIDE2LCBwYXJzZUludChsb2Fk
VmFsdWUoc3AgKyA4KS5sZW5ndGgpKTsKCQkJCQl9LAoKCQkJCQkvLyB2YWx1ZVByZXBhcmVTdHJp
bmcodiByZWYpIChyZWYsIGludCkKCQkJCQkic3lzY2FsbC9qcy52YWx1ZVByZXBhcmVTdHJpbmci
OiAoc3ApID0+IHsKCQkJCQkJY29uc3Qgc3RyID0gZW5jb2Rlci5lbmNvZGUoU3RyaW5nKGxvYWRW
YWx1ZShzcCArIDgpKSk7CgkJCQkJCXN0b3JlVmFsdWUoc3AgKyAxNiwgc3RyKTsKCQkJCQkJc2V0
SW50NjQoc3AgKyAyNCwgc3RyLmxlbmd0aCk7CgkJCQkJfSwKCgkJCQkJLy8gdmFsdWVMb2FkU3Ry
aW5nKHYgcmVmLCBiIFtdYnl0ZSkKCQkJCQkic3lzY2FsbC9qcy52YWx1ZUxvYWRTdHJpbmciOiAo
c3ApID0+IHsKCQkJCQkJY29uc3Qgc3RyID0gbG9hZFZhbHVlKHNwICsgOCk7CgkJCQkJCWxvYWRT
bGljZShzcCArIDE2KS5zZXQoc3RyKTsKCQkJCQl9LAoKCQkJCQkvLyBmdW5jIHZhbHVlSW5zdGFu
Y2VPZih2IHJlZiwgdCByZWYpIGJvb2wKCQkJCQkic3lzY2FsbC9qcy52YWx1ZUluc3RhbmNlT2Yi
OiAoc3ApID0+IHsKCQkJCQkJbWVtKCkuc2V0VWludDgoc3AgKyAyNCwgbG9hZFZhbHVlKHNwICsg
OCkgaW5zdGFuY2VvZiBsb2FkVmFsdWUoc3AgKyAxNikpOwoJCQkJCX0sCgoJCQkJCS8vIGZ1bmMg
Y29weUJ5dGVzVG9Hbyhkc3QgW11ieXRlLCBzcmMgcmVmKSAoaW50LCBib29sKQoJCQkJCSJzeXNj
YWxsL2pzLmNvcHlCeXRlc1RvR28iOiAoc3ApID0+IHsKCQkJCQkJY29uc3QgZHN0ID0gbG9hZFNs
aWNlKHNwICsgOCk7CgkJCQkJCWNvbnN0IHNyYyA9IGxvYWRWYWx1ZShzcCArIDMyKTsKCQkJCQkJ
aWYgKCEoc3JjIGluc3RhbmNlb2YgVWludDhBcnJheSkpIHsKCQkJCQkJCW1lbSgpLnNldFVpbnQ4
KHNwICsgNDgsIDApOwoJCQkJCQkJcmV0dXJuOwoJCQkJCQl9CgkJCQkJCWNvbnN0IHRvQ29weSA9
IHNyYy5zdWJhcnJheSgwLCBkc3QubGVuZ3RoKTsKCQkJCQkJZHN0LnNldCh0b0NvcHkpOwoJCQkJ
CQlzZXRJbnQ2NChzcCArIDQwLCB0b0NvcHkubGVuZ3RoKTsKCQkJCQkJbWVtKCkuc2V0VWludDgo
c3AgKyA0OCwgMSk7CgkJCQkJfSwKCgkJCQkJLy8gZnVuYyBjb3B5Qnl0ZXNUb0pTKGRzdCByZWYs
IHNyYyBbXWJ5dGUpIChpbnQsIGJvb2wpCgkJCQkJInN5c2NhbGwvanMuY29weUJ5dGVzVG9KUyI6
IChzcCkgPT4gewoJCQkJCQljb25zdCBkc3QgPSBsb2FkVmFsdWUoc3AgKyA4KTsKCQkJCQkJY29u
c3Qgc3JjID0gbG9hZFNsaWNlKHNwICsgMTYpOwoJCQkJCQlpZiAoIShkc3QgaW5zdGFuY2VvZiBV
aW50OEFycmF5KSkgewoJCQkJCQkJbWVtKCkuc2V0VWludDgoc3AgKyA0OCwgMCk7CgkJCQkJCQly
ZXR1cm47CgkJCQkJCX0KCQkJCQkJY29uc3QgdG9Db3B5ID0gc3JjLnN1YmFycmF5KDAsIGRzdC5s
ZW5ndGgpOwoJCQkJCQlkc3Quc2V0KHRvQ29weSk7CgkJCQkJCXNldEludDY0KHNwICsgNDAsIHRv
Q29weS5sZW5ndGgpOwoJCQkJCQltZW0oKS5zZXRVaW50OChzcCArIDQ4LCAxKTsKCQkJCQl9LAoK
CQkJCQkiZGVidWciOiAodmFsdWUpID0+IHsKCQkJCQkJY29uc29sZS5sb2codmFsdWUpOwoJCQkJ
CX0sCgkJCQl9CgkJCX07CgkJfQoKCQlhc3luYyBydW4oaW5zdGFuY2UpIHsKCQkJdGhpcy5faW5z
dCA9IGluc3RhbmNlOwoJCQl0aGlzLl92YWx1ZXMgPSBbIC8vIFRPRE86IGdhcmJhZ2UgY29sbGVj
dGlvbgoJCQkJTmFOLAoJCQkJMCwKCQkJCW51bGwsCgkJCQl0cnVlLAoJCQkJZmFsc2UsCgkJCQln
bG9iYWwsCgkJCQl0aGlzLAoJCQldOwoJCQl0aGlzLl9yZWZzID0gbmV3IE1hcCgpOwoJCQl0aGlz
LmV4aXRlZCA9IGZhbHNlOwoKCQkJY29uc3QgbWVtID0gbmV3IERhdGFWaWV3KHRoaXMuX2luc3Qu
ZXhwb3J0cy5tZW0uYnVmZmVyKQoKCQkJLy8gUGFzcyBjb21tYW5kIGxpbmUgYXJndW1lbnRzIGFu
ZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgdG8gV2ViQXNzZW1ibHkgYnkgd3JpdGluZyB0aGVtIHRv
IHRoZSBsaW5lYXIgbWVtb3J5LgoJCQlsZXQgb2Zmc2V0ID0gNDA5NjsKCgkJCWNvbnN0IHN0clB0
ciA9IChzdHIpID0+IHsKCQkJCWNvbnN0IHB0ciA9IG9mZnNldDsKCQkJCWNvbnN0IGJ5dGVzID0g
ZW5jb2Rlci5lbmNvZGUoc3RyICsgIlwwIik7CgkJCQluZXcgVWludDhBcnJheShtZW0uYnVmZmVy
LCBvZmZzZXQsIGJ5dGVzLmxlbmd0aCkuc2V0KGJ5dGVzKTsKCQkJCW9mZnNldCArPSBieXRlcy5s
ZW5ndGg7CgkJCQlpZiAob2Zmc2V0ICUgOCAhPT0gMCkgewoJCQkJCW9mZnNldCArPSA4IC0gKG9m
ZnNldCAlIDgpOwoJCQkJfQoJCQkJcmV0dXJuIHB0cjsKCQkJfTsKCgkJCWNvbnN0IGFyZ2MgPSB0
aGlzLmFyZ3YubGVuZ3RoOwoKCQkJY29uc3QgYXJndlB0cnMgPSBbXTsKCQkJdGhpcy5hcmd2LmZv
ckVhY2goKGFyZykgPT4gewoJCQkJYXJndlB0cnMucHVzaChzdHJQdHIoYXJnKSk7CgkJCX0pOwoK
CQkJY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMuZW52KS5zb3J0KCk7CgkJCWFyZ3ZQdHJz
LnB1c2goa2V5cy5sZW5ndGgpOwoJCQlrZXlzLmZvckVhY2goKGtleSkgPT4gewoJCQkJYXJndlB0
cnMucHVzaChzdHJQdHIoYCR7a2V5fT0ke3RoaXMuZW52W2tleV19YCkpOwoJCQl9KTsKCgkJCWNv
bnN0IGFyZ3YgPSBvZmZzZXQ7CgkJCWFyZ3ZQdHJzLmZvckVhY2goKHB0cikgPT4gewoJCQkJbWVt
LnNldFVpbnQzMihvZmZzZXQsIHB0ciwgdHJ1ZSk7CgkJCQltZW0uc2V0VWludDMyKG9mZnNldCAr
IDQsIDAsIHRydWUpOwoJCQkJb2Zmc2V0ICs9IDg7CgkJCX0pOwoKCQkJdGhpcy5faW5zdC5leHBv
cnRzLnJ1bihhcmdjLCBhcmd2KTsKCQkJaWYgKHRoaXMuZXhpdGVkKSB7CgkJCQl0aGlzLl9yZXNv
bHZlRXhpdFByb21pc2UoKTsKCQkJfQoJCQlhd2FpdCB0aGlzLl9leGl0UHJvbWlzZTsKCQl9CgoJ
CV9yZXN1bWUoKSB7CgkJCWlmICh0aGlzLmV4aXRlZCkgewoJCQkJdGhyb3cgbmV3IEVycm9yKCJH
byBwcm9ncmFtIGhhcyBhbHJlYWR5IGV4aXRlZCIpOwoJCQl9CgkJCXRoaXMuX2luc3QuZXhwb3J0
cy5yZXN1bWUoKTsKCQkJaWYgKHRoaXMuZXhpdGVkKSB7CgkJCQl0aGlzLl9yZXNvbHZlRXhpdFBy
b21pc2UoKTsKCQkJfQoJCX0KCgkJX21ha2VGdW5jV3JhcHBlcihpZCkgewoJCQljb25zdCBnbyA9
IHRoaXM7CgkJCXJldHVybiBmdW5jdGlvbiAoKSB7CgkJCQljb25zdCBldmVudCA9IHsgaWQ6IGlk
LCB0aGlzOiB0aGlzLCBhcmdzOiBhcmd1bWVudHMgfTsKCQkJCWdvLl9wZW5kaW5nRXZlbnQgPSBl
dmVudDsKCQkJCWdvLl9yZXN1bWUoKTsKCQkJCXJldHVybiBldmVudC5yZXN1bHQ7CgkJCX07CgkJ
fQoJfQoKCWlmICgKCQlnbG9iYWwucmVxdWlyZSAmJgoJCWdsb2JhbC5yZXF1aXJlLm1haW4gPT09
IG1vZHVsZSAmJgoJCWdsb2JhbC5wcm9jZXNzICYmCgkJZ2xvYmFsLnByb2Nlc3MudmVyc2lvbnMg
JiYKCQkhZ2xvYmFsLnByb2Nlc3MudmVyc2lvbnMuZWxlY3Ryb24KCSkgewoJCWlmIChwcm9jZXNz
LmFyZ3YubGVuZ3RoIDwgMykgewoJCQljb25zb2xlLmVycm9yKCJ1c2FnZTogZ29fanNfd2FzbV9l
eGVjIFt3YXNtIGJpbmFyeV0gW2FyZ3VtZW50c10iKTsKCQkJcHJvY2Vzcy5leGl0KDEpOwoJCX0K
CgkJY29uc3QgZ28gPSBuZXcgR28oKTsKCQlnby5hcmd2ID0gcHJvY2Vzcy5hcmd2LnNsaWNlKDIp
OwoJCWdvLmVudiA9IE9iamVjdC5hc3NpZ24oeyBUTVBESVI6IHJlcXVpcmUoIm9zIikudG1wZGly
KCkgfSwgcHJvY2Vzcy5lbnYpOwoJCWdvLmV4aXQgPSBwcm9jZXNzLmV4aXQ7CgkJV2ViQXNzZW1i
bHkuaW5zdGFudGlhdGUoZnMucmVhZEZpbGVTeW5jKHByb2Nlc3MuYXJndlsyXSksIGdvLmltcG9y
dE9iamVjdCkudGhlbigocmVzdWx0KSA9PiB7CgkJCXByb2Nlc3Mub24oImV4aXQiLCAoY29kZSkg
PT4geyAvLyBOb2RlLmpzIGV4aXRzIGlmIG5vIGV2ZW50IGhhbmRsZXIgaXMgcGVuZGluZwoJCQkJ
aWYgKGNvZGUgPT09IDAgJiYgIWdvLmV4aXRlZCkgewoJCQkJCS8vIGRlYWRsb2NrLCBtYWtlIEdv
IHByaW50IGVycm9yIGFuZCBzdGFjayB0cmFjZXMKCQkJCQlnby5fcGVuZGluZ0V2ZW50ID0geyBp
ZDogMCB9OwoJCQkJCWdvLl9yZXN1bWUoKTsKCQkJCX0KCQkJfSk7CgkJCXJldHVybiBnby5ydW4o
cmVzdWx0Lmluc3RhbmNlKTsKCQl9KS5jYXRjaCgoZXJyKSA9PiB7CgkJCWNvbnNvbGUuZXJyb3Io
ZXJyKTsKCQkJcHJvY2Vzcy5leGl0KDEpOwoJCX0pOwoJfQp9KSgpOwoKLyoKdmFyIHV1aWQgPSBm
dW5jdGlvbigpIHsKICAgIGZ1bmN0aW9uIF9wOChzKSB7CiAgICAgICAgdmFyIHAgPSAoTWF0aC5y
YW5kb20oKS50b1N0cmluZygxNikrIjAwMDAwMDAwMCIpLnN1YnN0cigyLDgpOwogICAgICAgIHJl
dHVybiBzID8gIi0iICsgcC5zdWJzdHIoMCw0KSArICItIiArIHAuc3Vic3RyKDQsNCkgOiBwIDsK
ICAgIH0KICAgIHJldHVybiBfcDgoKSArIF9wOCh0cnVlKSArIF9wOCh0cnVlKSArIF9wOCgpOwp9
OwoqLwoKZnVuY3Rpb24gUENNUGxheWVyKGN0eCkgewogICAgdGhpcy5jdHggPSBjdHg7CiAgICB0
aGlzLnN0YXJ0VGltZSA9IDA7CiAgICB0aGlzLm51bUNoYW5uZWxzID0gMjsKICAgIHRoaXMuc2Ft
cGxlUmF0ZSA9IDQ0MTAwOwp9CgpQQ01QbGF5ZXIucHJvdG90eXBlLnBsYXlOZXh0ID0gZnVuY3Rp
b24gKHNhbXBsZXNMZWZ0LCBzYW1wbGVzUmlnaHQpIHsKICAgIHZhciBhdWRpb0J1ZmZlciA9IHRo
aXMuY3R4LmNyZWF0ZUJ1ZmZlcih0aGlzLm51bUNoYW5uZWxzLCBzYW1wbGVzTGVmdC5sZW5ndGgs
IHRoaXMuc2FtcGxlUmF0ZSk7CiAgICBhdWRpb0J1ZmZlci5nZXRDaGFubmVsRGF0YSgwKS5zZXQo
c2FtcGxlc0xlZnQpCiAgICBhdWRpb0J1ZmZlci5nZXRDaGFubmVsRGF0YSgxKS5zZXQoc2FtcGxl
c1JpZ2h0KQoKICAgIGlmICh0aGlzLnN0YXJ0VGltZSA8IHRoaXMuY3R4LmN1cnJlbnRUaW1lKSB7
CiAgICAgICAgdGhpcy5zdGFydFRpbWUgPSB0aGlzLmN0eC5jdXJyZW50VGltZTsKICAgIH0KCiAg
ICB2YXIgYnVmZmVyU291cmNlID0gdGhpcy5jdHguY3JlYXRlQnVmZmVyU291cmNlKCk7CiAgICBi
dWZmZXJTb3VyY2UuYnVmZmVyID0gYXVkaW9CdWZmZXI7CiAgICBidWZmZXJTb3VyY2UuY29ubmVj
dCh0aGlzLmN0eC5kZXN0aW5hdGlvbik7CiAgICBidWZmZXJTb3VyY2Uuc3RhcnQodGhpcy5zdGFy
dFRpbWUpOwogICAgdGhpcy5zdGFydFRpbWUgKz0gYXVkaW9CdWZmZXIuZHVyYXRpb247Cn07Cgoo
KCkgPT4gewogICAgaWYgKCFXZWJBc3NlbWJseS5pbnN0YW50aWF0ZVN0cmVhbWluZykgeyAvLyBw
b2x5ZmlsbAogICAgICAgIFdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlU3RyZWFtaW5nID0gYXN5bmMg
KHJlc3AsIGltcG9ydE9iamVjdCkgPT4gewogICAgICAgICAgICBjb25zdCBzb3VyY2UgPSBhd2Fp
dCAoYXdhaXQgcmVzcCkuYXJyYXlCdWZmZXIoKTsKICAgICAgICAgICAgcmV0dXJuIGF3YWl0IFdl
YkFzc2VtYmx5Lmluc3RhbnRpYXRlKHNvdXJjZSwgaW1wb3J0T2JqZWN0KTsKICAgICAgICB9Owog
ICAgfQogICAgY29uc3QgZ28gPSBuZXcgR28oKTsKICAgIGxldCBtb2QsIGluc3Q7CiAgICBXZWJB
c3NlbWJseS5pbnN0YW50aWF0ZVN0cmVhbWluZyhmZXRjaCgiaHR0cHM6Ly9tZ25zay5naXRodWIu
aW8vZ28td2FzbS1kZW1vcy9wdWJsaWMvdHJpYW5nbGUvdHJpYW5nbGUud2FzbSIpLCBnby5pbXBv
cnRPYmplY3QpLnRoZW4oKHJlc3VsdCkgPT4gewogICAgICAgIG1vZCA9IHJlc3VsdC5tb2R1bGU7
CiAgICAgICAgaW5zdCA9IHJlc3VsdC5pbnN0YW5jZTsKICAgICAgICBydW4oKS50aGVuKChyZXN1
bHQpID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coIlJhbiBXQVNNOiAiLCByZXN1bHQpCiAg
ICAgICAgfSwgKGZhaWx1cmUpID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coIkZhaWxlZCB0
byBydW4gV0FTTTogIiwgZmFpbHVyZSkKICAgICAgICB9KQogICAgfSk7CiAgICBhc3luYyBmdW5j
dGlvbiBydW4oKSB7CiAgICAgICAgYXdhaXQgZ28ucnVuKGluc3QpOwogICAgICAgIGluc3QgPSBh
d2FpdCBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZShtb2QsIGdvLmltcG9ydE9iamVjdCk7IC8vIHJl
c2V0IGluc3RhbmNlCiAgICB9Cn0pKCk7Cg==
`